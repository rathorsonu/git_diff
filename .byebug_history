c
second_index = current_line_number
oneindex = current_line_number
1st_index = current_line_number
current_line_number = start_line_numbers.first || 1
start_line_numbers = patch.scan(/@@ -\d+,\d+ \+(\d+),\d+ @@/).flatten.map(&:to_i)
continue
current_line_number
continue
current_line_number
continue
n
current_line_number
result
continue
current_line_number
result
continue
current_line_number
c
n
n'
n
result
n
result
n
line.start_with?('-')
n
result << "%3s %3s" % ['@', line[1..-1]]
"%3s %3s" % ['@', line[1..-1]]
line.start_with?('@@')
continue
line.start_with?('@')
line.start_with?(@)
continue
c
continue
c
cc
c
continue
@count
continue
@count += 1
@count++
@count = 0 
@count+= 0 
@count += 0 
@count
n
result.count
count
result
n
continue
result
count
n
patch.lines.start_with?('+')
patch.lines.count
patch.lines
continue
result
continue
current_line_number += 1
result << "%3d %3s %3s  %s" % [current_line_number, current_line_number, '-', line[1..-1]]
result
line[1..-1]
current_line_number
line
n
continue
n
patch.lines
patch.lines.map(&:chomp)
start_line_numbers.first
start_line_numbers
n
patch.scan(/@@ -\d+,\d+ \+(\d+),\d+ @@/).flatten.map(&:to_i)
patch.scan(/@@ -\d+,\d+ \+(\d+),\d+ @@/).flatten
patch.scan(/@@ -\d+,\d+ \+(\d+),\d+ @@/)
patch
n
files[0].class
files[0][0]
files[0]
files.class
files
c
cc
c
ccc
c
start_line_numbers
current_line_number
line
c
current_line_number
line.current_line_number
line
c
cc
c
"%3d %3d %3s  %s" % [current_line_number, current_line_number, '', line]
current_line_number
current_line_number,
line
c
cc
c
cc
c
ccc
c
exit
c
patch_lines.each do |line| 
patch_lines.each do |line|
patch_lines
patch_line
line
c
line
c
line
c
line
c
line
c
line
c
line
c
line
c
line
c
line
c
line
c
line
c
line
c
line
c
line
c
line
c
line
c
line
c
line
c
line
c
patch_lines.map(&:chomp)
patch_lines.map(&chomp)
patch_lines
patch_lines.each{|x| puts x}
patch_lines.each{|x| x}
patch_lines.each{|x| puts x}
patch_lines = patch.lines.map(&:chomp)
c
patch_lines = patch.lines.map(&:chomp)
current_line_number = start_line_numbers.first || 1
 start_line_numbers = patch.scan(/@@ -\d+,\d+ \+(\d+),\d+ @@/).flatten.map(&:to_i)
c
line.start_with?('-')
next
skip_next_line = true
next
skip_next_line = false
line
c
line
c
line
c
line
c
line
c
line
c
line
c
line
c
line
c
line
c
line
c
line
c
line
c
line
c
line
c
line
c
line
c
line
c
["-", current_line_number, current_line_number, line[1..-1]]
c
["-", current_line_number, current_line_number, line[1..-1]]
c
["-", current_line_number, current_line_number, line[1..-1]]
c
["-", current_line_number, current_line_number, line[1..-1]]
c
entry
c
entry
c
entry
c
entry
c
entry
c
entry
c
entry
n
entry
c
entry
c
entry
c
entry
c
entry
c
indented_content
indented_content = content.empty? ? '' : "%3d %3s %3s  %s" % [old_line, new_line || '', type, content]
type, old_line, new_line, content = entry
 result
entry
c
patch.scan(/@@ -\d+,\d+ \+(\d+),\d+ @@/).flatten.map(&:to_i)
patch
c
 file[:patch].gsub("\\n", "\n").gsub("\n", "\\n") if file[:patch]
